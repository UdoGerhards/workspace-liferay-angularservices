/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package eu.gerhards.liferay.services.angular.service.base;

import com.liferay.announcements.kernel.service.persistence.AnnouncementsDeliveryPersistence;
import com.liferay.asset.kernel.service.persistence.AssetEntryFinder;
import com.liferay.asset.kernel.service.persistence.AssetEntryPersistence;
import com.liferay.document.library.kernel.service.persistence.DLFileEntryFinder;
import com.liferay.document.library.kernel.service.persistence.DLFileEntryPersistence;
import com.liferay.document.library.kernel.service.persistence.DLFileRankFinder;
import com.liferay.document.library.kernel.service.persistence.DLFileRankPersistence;
import com.liferay.expando.kernel.service.persistence.ExpandoRowPersistence;
import com.liferay.message.boards.kernel.service.persistence.*;
import com.liferay.portal.kernel.bean.BeanReference;
import com.liferay.portal.kernel.dao.db.DB;
import com.liferay.portal.kernel.dao.db.DBManagerUtil;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdate;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdateFactoryUtil;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.module.framework.service.IdentifiableOSGiService;
import com.liferay.portal.kernel.service.BaseServiceImpl;
import com.liferay.portal.kernel.service.persistence.*;
import com.liferay.portal.kernel.util.PortalUtil;
import com.liferay.portal.spring.extender.service.ServiceReference;
import com.liferay.ratings.kernel.service.persistence.RatingsStatsFinder;
import com.liferay.ratings.kernel.service.persistence.RatingsStatsPersistence;
import com.liferay.social.kernel.service.persistence.SocialActivityFinder;
import com.liferay.social.kernel.service.persistence.SocialActivityPersistence;
import com.liferay.social.kernel.service.persistence.SocialRelationPersistence;
import com.liferay.social.kernel.service.persistence.SocialRequestPersistence;
import eu.gerhards.liferay.services.angular.model.AngularOrganization;
import eu.gerhards.liferay.services.angular.service.AngularOrganizationService;
import eu.gerhards.liferay.services.angular.service.persistence.*;

import javax.sql.DataSource;

/**
 * Provides the base implementation for the Organization remote service.
 *
 * <p>
 * This implementation exists only as a container for the default service methods generated by ServiceBuilder. All custom service methods should be put in {@link eu.gerhards.liferay.services.angular.service.impl.AngularOrganizationServiceImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see eu.gerhards.liferay.services.angular.service.impl.AngularOrganizationServiceImpl
 * @see eu.gerhards.liferay.services.angular.service.AngularOrganizationServiceUtil
 * @generated
 */
public abstract class AngularOrganizationServiceBaseImpl extends BaseServiceImpl
	implements AngularOrganizationService, IdentifiableOSGiService {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. Always use {@link eu.gerhards.liferay.services.angular.service.AngularOrganizationServiceUtil} to access the Organization remote service.
	 */

	/**
	 * Returns the Bootstrap local service.
	 *
	 * @return the Bootstrap local service
	 */
	public eu.gerhards.liferay.services.angular.service.AngularBootstrapLocalService getAngularBootstrapLocalService() {
		return angularBootstrapLocalService;
	}

	/**
	 * Sets the Bootstrap local service.
	 *
	 * @param angularBootstrapLocalService the Bootstrap local service
	 */
	public void setAngularBootstrapLocalService(
		eu.gerhards.liferay.services.angular.service.AngularBootstrapLocalService angularBootstrapLocalService) {
		this.angularBootstrapLocalService = angularBootstrapLocalService;
	}

	/**
	 * Returns the Bootstrap remote service.
	 *
	 * @return the Bootstrap remote service
	 */
	public eu.gerhards.liferay.services.angular.service.AngularBootstrapService getAngularBootstrapService() {
		return angularBootstrapService;
	}

	/**
	 * Sets the Bootstrap remote service.
	 *
	 * @param angularBootstrapService the Bootstrap remote service
	 */
	public void setAngularBootstrapService(
		eu.gerhards.liferay.services.angular.service.AngularBootstrapService angularBootstrapService) {
		this.angularBootstrapService = angularBootstrapService;
	}

	/**
	 * Returns the Bootstrap persistence.
	 *
	 * @return the Bootstrap persistence
	 */
	public AngularBootstrapPersistence getAngularBootstrapPersistence() {
		return angularBootstrapPersistence;
	}

	/**
	 * Sets the Bootstrap persistence.
	 *
	 * @param angularBootstrapPersistence the Bootstrap persistence
	 */
	public void setAngularBootstrapPersistence(
		AngularBootstrapPersistence angularBootstrapPersistence) {
		this.angularBootstrapPersistence = angularBootstrapPersistence;
	}

	/**
	 * Returns the Group local service.
	 *
	 * @return the Group local service
	 */
	public eu.gerhards.liferay.services.angular.service.AngularGroupLocalService getAngularGroupLocalService() {
		return angularGroupLocalService;
	}

	/**
	 * Sets the Group local service.
	 *
	 * @param angularGroupLocalService the Group local service
	 */
	public void setAngularGroupLocalService(
		eu.gerhards.liferay.services.angular.service.AngularGroupLocalService angularGroupLocalService) {
		this.angularGroupLocalService = angularGroupLocalService;
	}

	/**
	 * Returns the Group remote service.
	 *
	 * @return the Group remote service
	 */
	public eu.gerhards.liferay.services.angular.service.AngularGroupService getAngularGroupService() {
		return angularGroupService;
	}

	/**
	 * Sets the Group remote service.
	 *
	 * @param angularGroupService the Group remote service
	 */
	public void setAngularGroupService(
		eu.gerhards.liferay.services.angular.service.AngularGroupService angularGroupService) {
		this.angularGroupService = angularGroupService;
	}

	/**
	 * Returns the Group persistence.
	 *
	 * @return the Group persistence
	 */
	public AngularGroupPersistence getAngularGroupPersistence() {
		return angularGroupPersistence;
	}

	/**
	 * Sets the Group persistence.
	 *
	 * @param angularGroupPersistence the Group persistence
	 */
	public void setAngularGroupPersistence(
		AngularGroupPersistence angularGroupPersistence) {
		this.angularGroupPersistence = angularGroupPersistence;
	}

	/**
	 * Returns the Instance local service.
	 *
	 * @return the Instance local service
	 */
	public eu.gerhards.liferay.services.angular.service.AngularInstanceLocalService getAngularInstanceLocalService() {
		return angularInstanceLocalService;
	}

	/**
	 * Sets the Instance local service.
	 *
	 * @param angularInstanceLocalService the Instance local service
	 */
	public void setAngularInstanceLocalService(
		eu.gerhards.liferay.services.angular.service.AngularInstanceLocalService angularInstanceLocalService) {
		this.angularInstanceLocalService = angularInstanceLocalService;
	}

	/**
	 * Returns the Instance remote service.
	 *
	 * @return the Instance remote service
	 */
	public eu.gerhards.liferay.services.angular.service.AngularInstanceService getAngularInstanceService() {
		return angularInstanceService;
	}

	/**
	 * Sets the Instance remote service.
	 *
	 * @param angularInstanceService the Instance remote service
	 */
	public void setAngularInstanceService(
		eu.gerhards.liferay.services.angular.service.AngularInstanceService angularInstanceService) {
		this.angularInstanceService = angularInstanceService;
	}

	/**
	 * Returns the Instance persistence.
	 *
	 * @return the Instance persistence
	 */
	public AngularInstancePersistence getAngularInstancePersistence() {
		return angularInstancePersistence;
	}

	/**
	 * Sets the Instance persistence.
	 *
	 * @param angularInstancePersistence the Instance persistence
	 */
	public void setAngularInstancePersistence(
		AngularInstancePersistence angularInstancePersistence) {
		this.angularInstancePersistence = angularInstancePersistence;
	}

	/**
	 * Returns the Layout local service.
	 *
	 * @return the Layout local service
	 */
	public eu.gerhards.liferay.services.angular.service.AngularLayoutLocalService getAngularLayoutLocalService() {
		return angularLayoutLocalService;
	}

	/**
	 * Sets the Layout local service.
	 *
	 * @param angularLayoutLocalService the Layout local service
	 */
	public void setAngularLayoutLocalService(
		eu.gerhards.liferay.services.angular.service.AngularLayoutLocalService angularLayoutLocalService) {
		this.angularLayoutLocalService = angularLayoutLocalService;
	}

	/**
	 * Returns the Layout remote service.
	 *
	 * @return the Layout remote service
	 */
	public eu.gerhards.liferay.services.angular.service.AngularLayoutService getAngularLayoutService() {
		return angularLayoutService;
	}

	/**
	 * Sets the Layout remote service.
	 *
	 * @param angularLayoutService the Layout remote service
	 */
	public void setAngularLayoutService(
		eu.gerhards.liferay.services.angular.service.AngularLayoutService angularLayoutService) {
		this.angularLayoutService = angularLayoutService;
	}

	/**
	 * Returns the Layout persistence.
	 *
	 * @return the Layout persistence
	 */
	public AngularLayoutPersistence getAngularLayoutPersistence() {
		return angularLayoutPersistence;
	}

	/**
	 * Sets the Layout persistence.
	 *
	 * @param angularLayoutPersistence the Layout persistence
	 */
	public void setAngularLayoutPersistence(
		AngularLayoutPersistence angularLayoutPersistence) {
		this.angularLayoutPersistence = angularLayoutPersistence;
	}

	/**
	 * Returns the Organization local service.
	 *
	 * @return the Organization local service
	 */
	public eu.gerhards.liferay.services.angular.service.AngularOrganizationLocalService getAngularOrganizationLocalService() {
		return angularOrganizationLocalService;
	}

	/**
	 * Sets the Organization local service.
	 *
	 * @param angularOrganizationLocalService the Organization local service
	 */
	public void setAngularOrganizationLocalService(
		eu.gerhards.liferay.services.angular.service.AngularOrganizationLocalService angularOrganizationLocalService) {
		this.angularOrganizationLocalService = angularOrganizationLocalService;
	}

	/**
	 * Returns the Organization remote service.
	 *
	 * @return the Organization remote service
	 */
	public AngularOrganizationService getAngularOrganizationService() {
		return angularOrganizationService;
	}

	/**
	 * Sets the Organization remote service.
	 *
	 * @param angularOrganizationService the Organization remote service
	 */
	public void setAngularOrganizationService(
		AngularOrganizationService angularOrganizationService) {
		this.angularOrganizationService = angularOrganizationService;
	}

	/**
	 * Returns the Organization persistence.
	 *
	 * @return the Organization persistence
	 */
	public AngularOrganizationPersistence getAngularOrganizationPersistence() {
		return angularOrganizationPersistence;
	}

	/**
	 * Sets the Organization persistence.
	 *
	 * @param angularOrganizationPersistence the Organization persistence
	 */
	public void setAngularOrganizationPersistence(
		AngularOrganizationPersistence angularOrganizationPersistence) {
		this.angularOrganizationPersistence = angularOrganizationPersistence;
	}

	/**
	 * Returns the Permission local service.
	 *
	 * @return the Permission local service
	 */
	public eu.gerhards.liferay.services.angular.service.AngularPermissionLocalService getAngularPermissionLocalService() {
		return angularPermissionLocalService;
	}

	/**
	 * Sets the Permission local service.
	 *
	 * @param angularPermissionLocalService the Permission local service
	 */
	public void setAngularPermissionLocalService(
		eu.gerhards.liferay.services.angular.service.AngularPermissionLocalService angularPermissionLocalService) {
		this.angularPermissionLocalService = angularPermissionLocalService;
	}

	/**
	 * Returns the Permission remote service.
	 *
	 * @return the Permission remote service
	 */
	public eu.gerhards.liferay.services.angular.service.AngularPermissionService getAngularPermissionService() {
		return angularPermissionService;
	}

	/**
	 * Sets the Permission remote service.
	 *
	 * @param angularPermissionService the Permission remote service
	 */
	public void setAngularPermissionService(
		eu.gerhards.liferay.services.angular.service.AngularPermissionService angularPermissionService) {
		this.angularPermissionService = angularPermissionService;
	}

	/**
	 * Returns the Permission persistence.
	 *
	 * @return the Permission persistence
	 */
	public AngularPermissionPersistence getAngularPermissionPersistence() {
		return angularPermissionPersistence;
	}

	/**
	 * Sets the Permission persistence.
	 *
	 * @param angularPermissionPersistence the Permission persistence
	 */
	public void setAngularPermissionPersistence(
		AngularPermissionPersistence angularPermissionPersistence) {
		this.angularPermissionPersistence = angularPermissionPersistence;
	}

	/**
	 * Returns the Portal local service.
	 *
	 * @return the Portal local service
	 */
	public eu.gerhards.liferay.services.angular.service.AngularPortalLocalService getAngularPortalLocalService() {
		return angularPortalLocalService;
	}

	/**
	 * Sets the Portal local service.
	 *
	 * @param angularPortalLocalService the Portal local service
	 */
	public void setAngularPortalLocalService(
		eu.gerhards.liferay.services.angular.service.AngularPortalLocalService angularPortalLocalService) {
		this.angularPortalLocalService = angularPortalLocalService;
	}

	/**
	 * Returns the Portal remote service.
	 *
	 * @return the Portal remote service
	 */
	public eu.gerhards.liferay.services.angular.service.AngularPortalService getAngularPortalService() {
		return angularPortalService;
	}

	/**
	 * Sets the Portal remote service.
	 *
	 * @param angularPortalService the Portal remote service
	 */
	public void setAngularPortalService(
		eu.gerhards.liferay.services.angular.service.AngularPortalService angularPortalService) {
		this.angularPortalService = angularPortalService;
	}

	/**
	 * Returns the Portal persistence.
	 *
	 * @return the Portal persistence
	 */
	public AngularPortalPersistence getAngularPortalPersistence() {
		return angularPortalPersistence;
	}

	/**
	 * Sets the Portal persistence.
	 *
	 * @param angularPortalPersistence the Portal persistence
	 */
	public void setAngularPortalPersistence(
		AngularPortalPersistence angularPortalPersistence) {
		this.angularPortalPersistence = angularPortalPersistence;
	}

	/**
	 * Returns the Resource block local service.
	 *
	 * @return the Resource block local service
	 */
	public eu.gerhards.liferay.services.angular.service.AngularResourceBlockLocalService getAngularResourceBlockLocalService() {
		return angularResourceBlockLocalService;
	}

	/**
	 * Sets the Resource block local service.
	 *
	 * @param angularResourceBlockLocalService the Resource block local service
	 */
	public void setAngularResourceBlockLocalService(
		eu.gerhards.liferay.services.angular.service.AngularResourceBlockLocalService angularResourceBlockLocalService) {
		this.angularResourceBlockLocalService = angularResourceBlockLocalService;
	}

	/**
	 * Returns the Resource block remote service.
	 *
	 * @return the Resource block remote service
	 */
	public eu.gerhards.liferay.services.angular.service.AngularResourceBlockService getAngularResourceBlockService() {
		return angularResourceBlockService;
	}

	/**
	 * Sets the Resource block remote service.
	 *
	 * @param angularResourceBlockService the Resource block remote service
	 */
	public void setAngularResourceBlockService(
		eu.gerhards.liferay.services.angular.service.AngularResourceBlockService angularResourceBlockService) {
		this.angularResourceBlockService = angularResourceBlockService;
	}

	/**
	 * Returns the Resource block persistence.
	 *
	 * @return the Resource block persistence
	 */
	public AngularResourceBlockPersistence getAngularResourceBlockPersistence() {
		return angularResourceBlockPersistence;
	}

	/**
	 * Sets the Resource block persistence.
	 *
	 * @param angularResourceBlockPersistence the Resource block persistence
	 */
	public void setAngularResourceBlockPersistence(
		AngularResourceBlockPersistence angularResourceBlockPersistence) {
		this.angularResourceBlockPersistence = angularResourceBlockPersistence;
	}

	/**
	 * Returns the Resource permission local service.
	 *
	 * @return the Resource permission local service
	 */
	public eu.gerhards.liferay.services.angular.service.AngularResourcePermissionLocalService getAngularResourcePermissionLocalService() {
		return angularResourcePermissionLocalService;
	}

	/**
	 * Sets the Resource permission local service.
	 *
	 * @param angularResourcePermissionLocalService the Resource permission local service
	 */
	public void setAngularResourcePermissionLocalService(
		eu.gerhards.liferay.services.angular.service.AngularResourcePermissionLocalService angularResourcePermissionLocalService) {
		this.angularResourcePermissionLocalService = angularResourcePermissionLocalService;
	}

	/**
	 * Returns the Resource permission remote service.
	 *
	 * @return the Resource permission remote service
	 */
	public eu.gerhards.liferay.services.angular.service.AngularResourcePermissionService getAngularResourcePermissionService() {
		return angularResourcePermissionService;
	}

	/**
	 * Sets the Resource permission remote service.
	 *
	 * @param angularResourcePermissionService the Resource permission remote service
	 */
	public void setAngularResourcePermissionService(
		eu.gerhards.liferay.services.angular.service.AngularResourcePermissionService angularResourcePermissionService) {
		this.angularResourcePermissionService = angularResourcePermissionService;
	}

	/**
	 * Returns the Resource permission persistence.
	 *
	 * @return the Resource permission persistence
	 */
	public AngularResourcePermissionPersistence getAngularResourcePermissionPersistence() {
		return angularResourcePermissionPersistence;
	}

	/**
	 * Sets the Resource permission persistence.
	 *
	 * @param angularResourcePermissionPersistence the Resource permission persistence
	 */
	public void setAngularResourcePermissionPersistence(
		AngularResourcePermissionPersistence angularResourcePermissionPersistence) {
		this.angularResourcePermissionPersistence = angularResourcePermissionPersistence;
	}

	/**
	 * Returns the Role local service.
	 *
	 * @return the Role local service
	 */
	public eu.gerhards.liferay.services.angular.service.AngularRoleLocalService getAngularRoleLocalService() {
		return angularRoleLocalService;
	}

	/**
	 * Sets the Role local service.
	 *
	 * @param angularRoleLocalService the Role local service
	 */
	public void setAngularRoleLocalService(
		eu.gerhards.liferay.services.angular.service.AngularRoleLocalService angularRoleLocalService) {
		this.angularRoleLocalService = angularRoleLocalService;
	}

	/**
	 * Returns the Role remote service.
	 *
	 * @return the Role remote service
	 */
	public eu.gerhards.liferay.services.angular.service.AngularRoleService getAngularRoleService() {
		return angularRoleService;
	}

	/**
	 * Sets the Role remote service.
	 *
	 * @param angularRoleService the Role remote service
	 */
	public void setAngularRoleService(
		eu.gerhards.liferay.services.angular.service.AngularRoleService angularRoleService) {
		this.angularRoleService = angularRoleService;
	}

	/**
	 * Returns the Role persistence.
	 *
	 * @return the Role persistence
	 */
	public AngularRolePersistence getAngularRolePersistence() {
		return angularRolePersistence;
	}

	/**
	 * Sets the Role persistence.
	 *
	 * @param angularRolePersistence the Role persistence
	 */
	public void setAngularRolePersistence(
		AngularRolePersistence angularRolePersistence) {
		this.angularRolePersistence = angularRolePersistence;
	}

	/**
	 * Returns the Site local service.
	 *
	 * @return the Site local service
	 */
	public eu.gerhards.liferay.services.angular.service.AngularSiteLocalService getAngularSiteLocalService() {
		return angularSiteLocalService;
	}

	/**
	 * Sets the Site local service.
	 *
	 * @param angularSiteLocalService the Site local service
	 */
	public void setAngularSiteLocalService(
		eu.gerhards.liferay.services.angular.service.AngularSiteLocalService angularSiteLocalService) {
		this.angularSiteLocalService = angularSiteLocalService;
	}

	/**
	 * Returns the Site remote service.
	 *
	 * @return the Site remote service
	 */
	public eu.gerhards.liferay.services.angular.service.AngularSiteService getAngularSiteService() {
		return angularSiteService;
	}

	/**
	 * Sets the Site remote service.
	 *
	 * @param angularSiteService the Site remote service
	 */
	public void setAngularSiteService(
		eu.gerhards.liferay.services.angular.service.AngularSiteService angularSiteService) {
		this.angularSiteService = angularSiteService;
	}

	/**
	 * Returns the Site persistence.
	 *
	 * @return the Site persistence
	 */
	public AngularSitePersistence getAngularSitePersistence() {
		return angularSitePersistence;
	}

	/**
	 * Sets the Site persistence.
	 *
	 * @param angularSitePersistence the Site persistence
	 */
	public void setAngularSitePersistence(
		AngularSitePersistence angularSitePersistence) {
		this.angularSitePersistence = angularSitePersistence;
	}

	/**
	 * Returns the Team local service.
	 *
	 * @return the Team local service
	 */
	public eu.gerhards.liferay.services.angular.service.AngularTeamLocalService getAngularTeamLocalService() {
		return angularTeamLocalService;
	}

	/**
	 * Sets the Team local service.
	 *
	 * @param angularTeamLocalService the Team local service
	 */
	public void setAngularTeamLocalService(
		eu.gerhards.liferay.services.angular.service.AngularTeamLocalService angularTeamLocalService) {
		this.angularTeamLocalService = angularTeamLocalService;
	}

	/**
	 * Returns the Team remote service.
	 *
	 * @return the Team remote service
	 */
	public eu.gerhards.liferay.services.angular.service.AngularTeamService getAngularTeamService() {
		return angularTeamService;
	}

	/**
	 * Sets the Team remote service.
	 *
	 * @param angularTeamService the Team remote service
	 */
	public void setAngularTeamService(
		eu.gerhards.liferay.services.angular.service.AngularTeamService angularTeamService) {
		this.angularTeamService = angularTeamService;
	}

	/**
	 * Returns the Team persistence.
	 *
	 * @return the Team persistence
	 */
	public AngularTeamPersistence getAngularTeamPersistence() {
		return angularTeamPersistence;
	}

	/**
	 * Sets the Team persistence.
	 *
	 * @param angularTeamPersistence the Team persistence
	 */
	public void setAngularTeamPersistence(
		AngularTeamPersistence angularTeamPersistence) {
		this.angularTeamPersistence = angularTeamPersistence;
	}

	/**
	 * Returns the User local service.
	 *
	 * @return the User local service
	 */
	public eu.gerhards.liferay.services.angular.service.AngularUserLocalService getAngularUserLocalService() {
		return angularUserLocalService;
	}

	/**
	 * Sets the User local service.
	 *
	 * @param angularUserLocalService the User local service
	 */
	public void setAngularUserLocalService(
		eu.gerhards.liferay.services.angular.service.AngularUserLocalService angularUserLocalService) {
		this.angularUserLocalService = angularUserLocalService;
	}

	/**
	 * Returns the User remote service.
	 *
	 * @return the User remote service
	 */
	public eu.gerhards.liferay.services.angular.service.AngularUserService getAngularUserService() {
		return angularUserService;
	}

	/**
	 * Sets the User remote service.
	 *
	 * @param angularUserService the User remote service
	 */
	public void setAngularUserService(
		eu.gerhards.liferay.services.angular.service.AngularUserService angularUserService) {
		this.angularUserService = angularUserService;
	}

	/**
	 * Returns the User persistence.
	 *
	 * @return the User persistence
	 */
	public AngularUserPersistence getAngularUserPersistence() {
		return angularUserPersistence;
	}

	/**
	 * Sets the User persistence.
	 *
	 * @param angularUserPersistence the User persistence
	 */
	public void setAngularUserPersistence(
		AngularUserPersistence angularUserPersistence) {
		this.angularUserPersistence = angularUserPersistence;
	}

	/**
	 * Returns the User group local service.
	 *
	 * @return the User group local service
	 */
	public eu.gerhards.liferay.services.angular.service.AngularUserGroupLocalService getAngularUserGroupLocalService() {
		return angularUserGroupLocalService;
	}

	/**
	 * Sets the User group local service.
	 *
	 * @param angularUserGroupLocalService the User group local service
	 */
	public void setAngularUserGroupLocalService(
		eu.gerhards.liferay.services.angular.service.AngularUserGroupLocalService angularUserGroupLocalService) {
		this.angularUserGroupLocalService = angularUserGroupLocalService;
	}

	/**
	 * Returns the User group remote service.
	 *
	 * @return the User group remote service
	 */
	public eu.gerhards.liferay.services.angular.service.AngularUserGroupService getAngularUserGroupService() {
		return angularUserGroupService;
	}

	/**
	 * Sets the User group remote service.
	 *
	 * @param angularUserGroupService the User group remote service
	 */
	public void setAngularUserGroupService(
		eu.gerhards.liferay.services.angular.service.AngularUserGroupService angularUserGroupService) {
		this.angularUserGroupService = angularUserGroupService;
	}

	/**
	 * Returns the User group persistence.
	 *
	 * @return the User group persistence
	 */
	public AngularUserGroupPersistence getAngularUserGroupPersistence() {
		return angularUserGroupPersistence;
	}

	/**
	 * Sets the User group persistence.
	 *
	 * @param angularUserGroupPersistence the User group persistence
	 */
	public void setAngularUserGroupPersistence(
		AngularUserGroupPersistence angularUserGroupPersistence) {
		this.angularUserGroupPersistence = angularUserGroupPersistence;
	}

	/**
	 * Returns the Virtual instance local service.
	 *
	 * @return the Virtual instance local service
	 */
	public eu.gerhards.liferay.services.angular.service.AngularVirtualInstanceLocalService getAngularVirtualInstanceLocalService() {
		return angularVirtualInstanceLocalService;
	}

	/**
	 * Sets the Virtual instance local service.
	 *
	 * @param angularVirtualInstanceLocalService the Virtual instance local service
	 */
	public void setAngularVirtualInstanceLocalService(
		eu.gerhards.liferay.services.angular.service.AngularVirtualInstanceLocalService angularVirtualInstanceLocalService) {
		this.angularVirtualInstanceLocalService = angularVirtualInstanceLocalService;
	}

	/**
	 * Returns the Virtual instance remote service.
	 *
	 * @return the Virtual instance remote service
	 */
	public eu.gerhards.liferay.services.angular.service.AngularVirtualInstanceService getAngularVirtualInstanceService() {
		return angularVirtualInstanceService;
	}

	/**
	 * Sets the Virtual instance remote service.
	 *
	 * @param angularVirtualInstanceService the Virtual instance remote service
	 */
	public void setAngularVirtualInstanceService(
		eu.gerhards.liferay.services.angular.service.AngularVirtualInstanceService angularVirtualInstanceService) {
		this.angularVirtualInstanceService = angularVirtualInstanceService;
	}

	/**
	 * Returns the Virtual instance persistence.
	 *
	 * @return the Virtual instance persistence
	 */
	public AngularVirtualInstancePersistence getAngularVirtualInstancePersistence() {
		return angularVirtualInstancePersistence;
	}

	/**
	 * Sets the Virtual instance persistence.
	 *
	 * @param angularVirtualInstancePersistence the Virtual instance persistence
	 */
	public void setAngularVirtualInstancePersistence(
		AngularVirtualInstancePersistence angularVirtualInstancePersistence) {
		this.angularVirtualInstancePersistence = angularVirtualInstancePersistence;
	}

	/**
	 * Returns the counter local service.
	 *
	 * @return the counter local service
	 */
	public com.liferay.counter.kernel.service.CounterLocalService getCounterLocalService() {
		return counterLocalService;
	}

	/**
	 * Sets the counter local service.
	 *
	 * @param counterLocalService the counter local service
	 */
	public void setCounterLocalService(
		com.liferay.counter.kernel.service.CounterLocalService counterLocalService) {
		this.counterLocalService = counterLocalService;
	}

	/**
	 * Returns the class name local service.
	 *
	 * @return the class name local service
	 */
	public com.liferay.portal.kernel.service.ClassNameLocalService getClassNameLocalService() {
		return classNameLocalService;
	}

	/**
	 * Sets the class name local service.
	 *
	 * @param classNameLocalService the class name local service
	 */
	public void setClassNameLocalService(
		com.liferay.portal.kernel.service.ClassNameLocalService classNameLocalService) {
		this.classNameLocalService = classNameLocalService;
	}

	/**
	 * Returns the class name remote service.
	 *
	 * @return the class name remote service
	 */
	public com.liferay.portal.kernel.service.ClassNameService getClassNameService() {
		return classNameService;
	}

	/**
	 * Sets the class name remote service.
	 *
	 * @param classNameService the class name remote service
	 */
	public void setClassNameService(
		com.liferay.portal.kernel.service.ClassNameService classNameService) {
		this.classNameService = classNameService;
	}

	/**
	 * Returns the class name persistence.
	 *
	 * @return the class name persistence
	 */
	public ClassNamePersistence getClassNamePersistence() {
		return classNamePersistence;
	}

	/**
	 * Sets the class name persistence.
	 *
	 * @param classNamePersistence the class name persistence
	 */
	public void setClassNamePersistence(
		ClassNamePersistence classNamePersistence) {
		this.classNamePersistence = classNamePersistence;
	}

	/**
	 * Returns the resource local service.
	 *
	 * @return the resource local service
	 */
	public com.liferay.portal.kernel.service.ResourceLocalService getResourceLocalService() {
		return resourceLocalService;
	}

	/**
	 * Sets the resource local service.
	 *
	 * @param resourceLocalService the resource local service
	 */
	public void setResourceLocalService(
		com.liferay.portal.kernel.service.ResourceLocalService resourceLocalService) {
		this.resourceLocalService = resourceLocalService;
	}

	/**
	 * Returns the user local service.
	 *
	 * @return the user local service
	 */
	public com.liferay.portal.kernel.service.UserLocalService getUserLocalService() {
		return userLocalService;
	}

	/**
	 * Sets the user local service.
	 *
	 * @param userLocalService the user local service
	 */
	public void setUserLocalService(
		com.liferay.portal.kernel.service.UserLocalService userLocalService) {
		this.userLocalService = userLocalService;
	}

	/**
	 * Returns the user remote service.
	 *
	 * @return the user remote service
	 */
	public com.liferay.portal.kernel.service.UserService getUserService() {
		return userService;
	}

	/**
	 * Sets the user remote service.
	 *
	 * @param userService the user remote service
	 */
	public void setUserService(
		com.liferay.portal.kernel.service.UserService userService) {
		this.userService = userService;
	}

	/**
	 * Returns the user persistence.
	 *
	 * @return the user persistence
	 */
	public UserPersistence getUserPersistence() {
		return userPersistence;
	}

	/**
	 * Sets the user persistence.
	 *
	 * @param userPersistence the user persistence
	 */
	public void setUserPersistence(UserPersistence userPersistence) {
		this.userPersistence = userPersistence;
	}

	public void afterPropertiesSet() {
	}

	public void destroy() {
	}

	/**
	 * Returns the OSGi service identifier.
	 *
	 * @return the OSGi service identifier
	 */
	@Override
	public String getOSGiServiceIdentifier() {
		return AngularOrganizationService.class.getName();
	}

	protected Class<?> getModelClass() {
		return AngularOrganization.class;
	}

	protected String getModelClassName() {
		return AngularOrganization.class.getName();
	}

	/**
	 * Performs a SQL query.
	 *
	 * @param sql the sql query
	 */
	protected void runSQL(String sql) {
		try {
			DataSource dataSource = angularOrganizationPersistence.getDataSource();

			DB db = DBManagerUtil.getDB();

			sql = db.buildSQL(sql);
			sql = PortalUtil.transformSQL(sql);

			SqlUpdate sqlUpdate = SqlUpdateFactoryUtil.getSqlUpdate(dataSource,
					sql);

			sqlUpdate.update();
		}
		catch (Exception e) {
			throw new SystemException(e);
		}
	}

	@BeanReference(type = eu.gerhards.liferay.services.angular.service.AngularBootstrapLocalService.class)
	protected eu.gerhards.liferay.services.angular.service.AngularBootstrapLocalService angularBootstrapLocalService;
	@BeanReference(type = eu.gerhards.liferay.services.angular.service.AngularBootstrapService.class)
	protected eu.gerhards.liferay.services.angular.service.AngularBootstrapService angularBootstrapService;
	@BeanReference(type = AngularBootstrapPersistence.class)
	protected AngularBootstrapPersistence angularBootstrapPersistence;
	@BeanReference(type = eu.gerhards.liferay.services.angular.service.AngularGroupLocalService.class)
	protected eu.gerhards.liferay.services.angular.service.AngularGroupLocalService angularGroupLocalService;
	@BeanReference(type = eu.gerhards.liferay.services.angular.service.AngularGroupService.class)
	protected eu.gerhards.liferay.services.angular.service.AngularGroupService angularGroupService;
	@BeanReference(type = AngularGroupPersistence.class)
	protected AngularGroupPersistence angularGroupPersistence;
	@BeanReference(type = eu.gerhards.liferay.services.angular.service.AngularInstanceLocalService.class)
	protected eu.gerhards.liferay.services.angular.service.AngularInstanceLocalService angularInstanceLocalService;
	@BeanReference(type = eu.gerhards.liferay.services.angular.service.AngularInstanceService.class)
	protected eu.gerhards.liferay.services.angular.service.AngularInstanceService angularInstanceService;
	@BeanReference(type = AngularInstancePersistence.class)
	protected AngularInstancePersistence angularInstancePersistence;
	@BeanReference(type = eu.gerhards.liferay.services.angular.service.AngularLayoutLocalService.class)
	protected eu.gerhards.liferay.services.angular.service.AngularLayoutLocalService angularLayoutLocalService;
	@BeanReference(type = eu.gerhards.liferay.services.angular.service.AngularLayoutService.class)
	protected eu.gerhards.liferay.services.angular.service.AngularLayoutService angularLayoutService;
	@BeanReference(type = AngularLayoutPersistence.class)
	protected AngularLayoutPersistence angularLayoutPersistence;
	@BeanReference(type = eu.gerhards.liferay.services.angular.service.AngularOrganizationLocalService.class)
	protected eu.gerhards.liferay.services.angular.service.AngularOrganizationLocalService angularOrganizationLocalService;
	@BeanReference(type = AngularOrganizationService.class)
	protected AngularOrganizationService angularOrganizationService;
	@BeanReference(type = AngularOrganizationPersistence.class)
	protected AngularOrganizationPersistence angularOrganizationPersistence;
	@BeanReference(type = eu.gerhards.liferay.services.angular.service.AngularPermissionLocalService.class)
	protected eu.gerhards.liferay.services.angular.service.AngularPermissionLocalService angularPermissionLocalService;
	@BeanReference(type = eu.gerhards.liferay.services.angular.service.AngularPermissionService.class)
	protected eu.gerhards.liferay.services.angular.service.AngularPermissionService angularPermissionService;
	@BeanReference(type = AngularPermissionPersistence.class)
	protected AngularPermissionPersistence angularPermissionPersistence;
	@BeanReference(type = eu.gerhards.liferay.services.angular.service.AngularPortalLocalService.class)
	protected eu.gerhards.liferay.services.angular.service.AngularPortalLocalService angularPortalLocalService;
	@BeanReference(type = eu.gerhards.liferay.services.angular.service.AngularPortalService.class)
	protected eu.gerhards.liferay.services.angular.service.AngularPortalService angularPortalService;
	@BeanReference(type = AngularPortalPersistence.class)
	protected AngularPortalPersistence angularPortalPersistence;
	@BeanReference(type = eu.gerhards.liferay.services.angular.service.AngularResourceBlockLocalService.class)
	protected eu.gerhards.liferay.services.angular.service.AngularResourceBlockLocalService angularResourceBlockLocalService;
	@BeanReference(type = eu.gerhards.liferay.services.angular.service.AngularResourceBlockService.class)
	protected eu.gerhards.liferay.services.angular.service.AngularResourceBlockService angularResourceBlockService;
	@BeanReference(type = AngularResourceBlockPersistence.class)
	protected AngularResourceBlockPersistence angularResourceBlockPersistence;
	@BeanReference(type = eu.gerhards.liferay.services.angular.service.AngularResourcePermissionLocalService.class)
	protected eu.gerhards.liferay.services.angular.service.AngularResourcePermissionLocalService angularResourcePermissionLocalService;
	@BeanReference(type = eu.gerhards.liferay.services.angular.service.AngularResourcePermissionService.class)
	protected eu.gerhards.liferay.services.angular.service.AngularResourcePermissionService angularResourcePermissionService;
	@BeanReference(type = AngularResourcePermissionPersistence.class)
	protected AngularResourcePermissionPersistence angularResourcePermissionPersistence;
	@BeanReference(type = eu.gerhards.liferay.services.angular.service.AngularRoleLocalService.class)
	protected eu.gerhards.liferay.services.angular.service.AngularRoleLocalService angularRoleLocalService;
	@BeanReference(type = eu.gerhards.liferay.services.angular.service.AngularRoleService.class)
	protected eu.gerhards.liferay.services.angular.service.AngularRoleService angularRoleService;
	@BeanReference(type = AngularRolePersistence.class)
	protected AngularRolePersistence angularRolePersistence;
	@BeanReference(type = eu.gerhards.liferay.services.angular.service.AngularSiteLocalService.class)
	protected eu.gerhards.liferay.services.angular.service.AngularSiteLocalService angularSiteLocalService;
	@BeanReference(type = eu.gerhards.liferay.services.angular.service.AngularSiteService.class)
	protected eu.gerhards.liferay.services.angular.service.AngularSiteService angularSiteService;
	@BeanReference(type = AngularSitePersistence.class)
	protected AngularSitePersistence angularSitePersistence;
	@BeanReference(type = eu.gerhards.liferay.services.angular.service.AngularTeamLocalService.class)
	protected eu.gerhards.liferay.services.angular.service.AngularTeamLocalService angularTeamLocalService;
	@BeanReference(type = eu.gerhards.liferay.services.angular.service.AngularTeamService.class)
	protected eu.gerhards.liferay.services.angular.service.AngularTeamService angularTeamService;
	@BeanReference(type = AngularTeamPersistence.class)
	protected AngularTeamPersistence angularTeamPersistence;
	@BeanReference(type = eu.gerhards.liferay.services.angular.service.AngularUserLocalService.class)
	protected eu.gerhards.liferay.services.angular.service.AngularUserLocalService angularUserLocalService;
	@BeanReference(type = eu.gerhards.liferay.services.angular.service.AngularUserService.class)
	protected eu.gerhards.liferay.services.angular.service.AngularUserService angularUserService;
	@BeanReference(type = AngularUserPersistence.class)
	protected AngularUserPersistence angularUserPersistence;
	@BeanReference(type = eu.gerhards.liferay.services.angular.service.AngularUserGroupLocalService.class)
	protected eu.gerhards.liferay.services.angular.service.AngularUserGroupLocalService angularUserGroupLocalService;
	@BeanReference(type = eu.gerhards.liferay.services.angular.service.AngularUserGroupService.class)
	protected eu.gerhards.liferay.services.angular.service.AngularUserGroupService angularUserGroupService;
	@BeanReference(type = AngularUserGroupPersistence.class)
	protected AngularUserGroupPersistence angularUserGroupPersistence;
	@BeanReference(type = eu.gerhards.liferay.services.angular.service.AngularVirtualInstanceLocalService.class)
	protected eu.gerhards.liferay.services.angular.service.AngularVirtualInstanceLocalService angularVirtualInstanceLocalService;
	@BeanReference(type = eu.gerhards.liferay.services.angular.service.AngularVirtualInstanceService.class)
	protected eu.gerhards.liferay.services.angular.service.AngularVirtualInstanceService angularVirtualInstanceService;
	@BeanReference(type = AngularVirtualInstancePersistence.class)
	protected AngularVirtualInstancePersistence angularVirtualInstancePersistence;
	@ServiceReference(type = com.liferay.counter.kernel.service.CounterLocalService.class)
	protected com.liferay.counter.kernel.service.CounterLocalService counterLocalService;
	@ServiceReference(type = com.liferay.portal.kernel.service.ClassNameLocalService.class)
	protected com.liferay.portal.kernel.service.ClassNameLocalService classNameLocalService;
	@ServiceReference(type = com.liferay.portal.kernel.service.ClassNameService.class)
	protected com.liferay.portal.kernel.service.ClassNameService classNameService;
	@ServiceReference(type = ClassNamePersistence.class)
	protected ClassNamePersistence classNamePersistence;
	@ServiceReference(type = com.liferay.portal.kernel.service.ResourceLocalService.class)
	protected com.liferay.portal.kernel.service.ResourceLocalService resourceLocalService;
	@ServiceReference(type = com.liferay.portal.kernel.service.UserLocalService.class)
	protected com.liferay.portal.kernel.service.UserLocalService userLocalService;
	@ServiceReference(type = com.liferay.portal.kernel.service.UserService.class)
	protected com.liferay.portal.kernel.service.UserService userService;
	@ServiceReference(type = UserPersistence.class)
	protected UserPersistence userPersistence;

	@BeanReference(type = UserFinder.class)
	protected UserFinder userFinder;
	@BeanReference(type = com.liferay.mail.kernel.service.MailService.class)
	protected com.liferay.mail.kernel.service.MailService mailService;
	@BeanReference(type = com.liferay.portal.kernel.service.BrowserTrackerLocalService.class)
	protected com.liferay.portal.kernel.service.BrowserTrackerLocalService browserTrackerLocalService;
	@BeanReference(type = BrowserTrackerPersistence.class)
	protected BrowserTrackerPersistence browserTrackerPersistence;
	@BeanReference(type = com.liferay.portal.kernel.service.CompanyLocalService.class)
	protected com.liferay.portal.kernel.service.CompanyLocalService companyLocalService;
	@BeanReference(type = com.liferay.portal.kernel.service.CompanyService.class)
	protected com.liferay.portal.kernel.service.CompanyService companyService;
	@BeanReference(type = CompanyPersistence.class)
	protected CompanyPersistence companyPersistence;
	@BeanReference(type = com.liferay.portal.kernel.service.ContactLocalService.class)
	protected com.liferay.portal.kernel.service.ContactLocalService contactLocalService;
	@BeanReference(type = com.liferay.portal.kernel.service.ContactService.class)
	protected com.liferay.portal.kernel.service.ContactService contactService;
	@BeanReference(type = ContactPersistence.class)
	protected ContactPersistence contactPersistence;
	@BeanReference(type = com.liferay.portal.kernel.service.GroupLocalService.class)
	protected com.liferay.portal.kernel.service.GroupLocalService groupLocalService;
	@BeanReference(type = com.liferay.portal.kernel.service.GroupService.class)
	protected com.liferay.portal.kernel.service.GroupService groupService;
	@BeanReference(type = GroupPersistence.class)
	protected GroupPersistence groupPersistence;
	@BeanReference(type = GroupFinder.class)
	protected GroupFinder groupFinder;
	@BeanReference(type = com.liferay.portal.kernel.service.ImageLocalService.class)
	protected com.liferay.portal.kernel.service.ImageLocalService imageLocalService;
	@BeanReference(type = com.liferay.portal.kernel.service.ImageService.class)
	protected com.liferay.portal.kernel.service.ImageService imageService;
	@BeanReference(type = ImagePersistence.class)
	protected ImagePersistence imagePersistence;
	@BeanReference(type = com.liferay.portal.kernel.service.LayoutLocalService.class)
	protected com.liferay.portal.kernel.service.LayoutLocalService layoutLocalService;
	@BeanReference(type = com.liferay.portal.kernel.service.LayoutService.class)
	protected com.liferay.portal.kernel.service.LayoutService layoutService;
	@BeanReference(type = LayoutPersistence.class)
	protected LayoutPersistence layoutPersistence;
	@BeanReference(type = LayoutFinder.class)
	protected LayoutFinder layoutFinder;
	@BeanReference(type = com.liferay.portal.kernel.service.MembershipRequestLocalService.class)
	protected com.liferay.portal.kernel.service.MembershipRequestLocalService membershipRequestLocalService;
	@BeanReference(type = com.liferay.portal.kernel.service.MembershipRequestService.class)
	protected com.liferay.portal.kernel.service.MembershipRequestService membershipRequestService;
	@BeanReference(type = MembershipRequestPersistence.class)
	protected MembershipRequestPersistence membershipRequestPersistence;
	@BeanReference(type = com.liferay.portal.kernel.service.OrganizationLocalService.class)
	protected com.liferay.portal.kernel.service.OrganizationLocalService organizationLocalService;
	@BeanReference(type = com.liferay.portal.kernel.service.OrganizationService.class)
	protected com.liferay.portal.kernel.service.OrganizationService organizationService;
	@BeanReference(type = OrganizationPersistence.class)
	protected OrganizationPersistence organizationPersistence;
	@BeanReference(type = OrganizationFinder.class)
	protected OrganizationFinder organizationFinder;
	@BeanReference(type = com.liferay.portal.kernel.service.PasswordPolicyLocalService.class)
	protected com.liferay.portal.kernel.service.PasswordPolicyLocalService passwordPolicyLocalService;
	@BeanReference(type = com.liferay.portal.kernel.service.PasswordPolicyService.class)
	protected com.liferay.portal.kernel.service.PasswordPolicyService passwordPolicyService;
	@BeanReference(type = PasswordPolicyPersistence.class)
	protected PasswordPolicyPersistence passwordPolicyPersistence;
	@BeanReference(type = PasswordPolicyFinder.class)
	protected PasswordPolicyFinder passwordPolicyFinder;
	@BeanReference(type = com.liferay.portal.kernel.service.PasswordPolicyRelLocalService.class)
	protected com.liferay.portal.kernel.service.PasswordPolicyRelLocalService passwordPolicyRelLocalService;
	@BeanReference(type = PasswordPolicyRelPersistence.class)
	protected PasswordPolicyRelPersistence passwordPolicyRelPersistence;
	@BeanReference(type = com.liferay.portal.kernel.service.PasswordTrackerLocalService.class)
	protected com.liferay.portal.kernel.service.PasswordTrackerLocalService passwordTrackerLocalService;
	@BeanReference(type = PasswordTrackerPersistence.class)
	protected PasswordTrackerPersistence passwordTrackerPersistence;
	@BeanReference(type = com.liferay.portal.kernel.service.RecentLayoutBranchLocalService.class)
	protected com.liferay.portal.kernel.service.RecentLayoutBranchLocalService recentLayoutBranchLocalService;
	@BeanReference(type = RecentLayoutBranchPersistence.class)
	protected RecentLayoutBranchPersistence recentLayoutBranchPersistence;
	@BeanReference(type = com.liferay.portal.kernel.service.RecentLayoutRevisionLocalService.class)
	protected com.liferay.portal.kernel.service.RecentLayoutRevisionLocalService recentLayoutRevisionLocalService;
	@BeanReference(type = RecentLayoutRevisionPersistence.class)
	protected RecentLayoutRevisionPersistence recentLayoutRevisionPersistence;
	@BeanReference(type = com.liferay.portal.kernel.service.RecentLayoutSetBranchLocalService.class)
	protected com.liferay.portal.kernel.service.RecentLayoutSetBranchLocalService recentLayoutSetBranchLocalService;
	@BeanReference(type = RecentLayoutSetBranchPersistence.class)
	protected RecentLayoutSetBranchPersistence recentLayoutSetBranchPersistence;
	@BeanReference(type = com.liferay.portal.kernel.service.RoleLocalService.class)
	protected com.liferay.portal.kernel.service.RoleLocalService roleLocalService;
	@BeanReference(type = com.liferay.portal.kernel.service.RoleService.class)
	protected com.liferay.portal.kernel.service.RoleService roleService;
	@BeanReference(type = RolePersistence.class)
	protected RolePersistence rolePersistence;
	@BeanReference(type = RoleFinder.class)
	protected RoleFinder roleFinder;
	@BeanReference(type = com.liferay.portal.kernel.service.SubscriptionLocalService.class)
	protected com.liferay.portal.kernel.service.SubscriptionLocalService subscriptionLocalService;
	@BeanReference(type = SubscriptionPersistence.class)
	protected SubscriptionPersistence subscriptionPersistence;
	@BeanReference(type = com.liferay.portal.kernel.service.TeamLocalService.class)
	protected com.liferay.portal.kernel.service.TeamLocalService teamLocalService;
	@BeanReference(type = com.liferay.portal.kernel.service.TeamService.class)
	protected com.liferay.portal.kernel.service.TeamService teamService;
	@BeanReference(type = TeamPersistence.class)
	protected TeamPersistence teamPersistence;
	@BeanReference(type = TeamFinder.class)
	protected TeamFinder teamFinder;
	@BeanReference(type = com.liferay.portal.kernel.service.TicketLocalService.class)
	protected com.liferay.portal.kernel.service.TicketLocalService ticketLocalService;
	@BeanReference(type = TicketPersistence.class)
	protected TicketPersistence ticketPersistence;
	@BeanReference(type = com.liferay.announcements.kernel.service.AnnouncementsDeliveryLocalService.class)
	protected com.liferay.announcements.kernel.service.AnnouncementsDeliveryLocalService announcementsDeliveryLocalService;
	@BeanReference(type = com.liferay.announcements.kernel.service.AnnouncementsDeliveryService.class)
	protected com.liferay.announcements.kernel.service.AnnouncementsDeliveryService announcementsDeliveryService;
	@BeanReference(type = AnnouncementsDeliveryPersistence.class)
	protected AnnouncementsDeliveryPersistence announcementsDeliveryPersistence;
	@BeanReference(type = com.liferay.asset.kernel.service.AssetEntryLocalService.class)
	protected com.liferay.asset.kernel.service.AssetEntryLocalService assetEntryLocalService;
	@BeanReference(type = com.liferay.asset.kernel.service.AssetEntryService.class)
	protected com.liferay.asset.kernel.service.AssetEntryService assetEntryService;
	@BeanReference(type = AssetEntryPersistence.class)
	protected AssetEntryPersistence assetEntryPersistence;
	@BeanReference(type = AssetEntryFinder.class)
	protected AssetEntryFinder assetEntryFinder;
	@BeanReference(type = com.liferay.document.library.kernel.service.DLFileEntryLocalService.class)
	protected com.liferay.document.library.kernel.service.DLFileEntryLocalService dlFileEntryLocalService;
	@BeanReference(type = com.liferay.document.library.kernel.service.DLFileEntryService.class)
	protected com.liferay.document.library.kernel.service.DLFileEntryService dlFileEntryService;
	@BeanReference(type = DLFileEntryPersistence.class)
	protected DLFileEntryPersistence dlFileEntryPersistence;
	@BeanReference(type = DLFileEntryFinder.class)
	protected DLFileEntryFinder dlFileEntryFinder;
	@BeanReference(type = com.liferay.document.library.kernel.service.DLFileRankLocalService.class)
	protected com.liferay.document.library.kernel.service.DLFileRankLocalService dlFileRankLocalService;
	@BeanReference(type = DLFileRankPersistence.class)
	protected DLFileRankPersistence dlFileRankPersistence;
	@BeanReference(type = DLFileRankFinder.class)
	protected DLFileRankFinder dlFileRankFinder;
	@BeanReference(type = com.liferay.expando.kernel.service.ExpandoRowLocalService.class)
	protected com.liferay.expando.kernel.service.ExpandoRowLocalService expandoRowLocalService;
	@BeanReference(type = ExpandoRowPersistence.class)
	protected ExpandoRowPersistence expandoRowPersistence;
	@BeanReference(type = com.liferay.message.boards.kernel.service.MBBanLocalService.class)
	protected com.liferay.message.boards.kernel.service.MBBanLocalService mbBanLocalService;
	@BeanReference(type = com.liferay.message.boards.kernel.service.MBBanService.class)
	protected com.liferay.message.boards.kernel.service.MBBanService mbBanService;
	@BeanReference(type = MBBanPersistence.class)
	protected MBBanPersistence mbBanPersistence;
	@BeanReference(type = com.liferay.message.boards.kernel.service.MBMessageLocalService.class)
	protected com.liferay.message.boards.kernel.service.MBMessageLocalService mbMessageLocalService;
	@BeanReference(type = com.liferay.message.boards.kernel.service.MBMessageService.class)
	protected com.liferay.message.boards.kernel.service.MBMessageService mbMessageService;
	@BeanReference(type = MBMessagePersistence.class)
	protected MBMessagePersistence mbMessagePersistence;
	@BeanReference(type = MBMessageFinder.class)
	protected MBMessageFinder mbMessageFinder;
	@BeanReference(type = com.liferay.message.boards.kernel.service.MBStatsUserLocalService.class)
	protected com.liferay.message.boards.kernel.service.MBStatsUserLocalService mbStatsUserLocalService;
	@BeanReference(type = MBStatsUserPersistence.class)
	protected MBStatsUserPersistence mbStatsUserPersistence;
	@BeanReference(type = com.liferay.message.boards.kernel.service.MBThreadFlagLocalService.class)
	protected com.liferay.message.boards.kernel.service.MBThreadFlagLocalService mbThreadFlagLocalService;
	@BeanReference(type = MBThreadFlagPersistence.class)
	protected MBThreadFlagPersistence mbThreadFlagPersistence;
	@BeanReference(type = com.liferay.ratings.kernel.service.RatingsStatsLocalService.class)
	protected com.liferay.ratings.kernel.service.RatingsStatsLocalService ratingsStatsLocalService;
	@BeanReference(type = RatingsStatsPersistence.class)
	protected RatingsStatsPersistence ratingsStatsPersistence;
	@BeanReference(type = RatingsStatsFinder.class)
	protected RatingsStatsFinder ratingsStatsFinder;
	@BeanReference(type = com.liferay.social.kernel.service.SocialActivityLocalService.class)
	protected com.liferay.social.kernel.service.SocialActivityLocalService socialActivityLocalService;
	@BeanReference(type = com.liferay.social.kernel.service.SocialActivityService.class)
	protected com.liferay.social.kernel.service.SocialActivityService socialActivityService;
	@BeanReference(type = SocialActivityPersistence.class)
	protected SocialActivityPersistence socialActivityPersistence;
	@BeanReference(type = SocialActivityFinder.class)
	protected SocialActivityFinder socialActivityFinder;
	@BeanReference(type = com.liferay.social.kernel.service.SocialRelationLocalService.class)
	protected com.liferay.social.kernel.service.SocialRelationLocalService socialRelationLocalService;
	@BeanReference(type = SocialRelationPersistence.class)
	protected SocialRelationPersistence socialRelationPersistence;
	@BeanReference(type = com.liferay.social.kernel.service.SocialRequestLocalService.class)
	protected com.liferay.social.kernel.service.SocialRequestLocalService socialRequestLocalService;
	@BeanReference(type = com.liferay.social.kernel.service.SocialRequestService.class)
	protected com.liferay.social.kernel.service.SocialRequestService socialRequestService;
	@BeanReference(type = SocialRequestPersistence.class)
	protected SocialRequestPersistence socialRequestPersistence;
	@BeanReference(type = com.liferay.portal.kernel.service.UserGroupLocalService.class)
	protected com.liferay.portal.kernel.service.UserGroupLocalService userGroupLocalService;
	@BeanReference(type = com.liferay.portal.kernel.service.UserGroupService.class)
	protected com.liferay.portal.kernel.service.UserGroupService userGroupService;
	@BeanReference(type = UserGroupPersistence.class)
	protected UserGroupPersistence userGroupPersistence;
	@BeanReference(type = UserGroupFinder.class)
	protected UserGroupFinder userGroupFinder;
	@BeanReference(type = com.liferay.portal.kernel.service.UserGroupRoleLocalService.class)
	protected com.liferay.portal.kernel.service.UserGroupRoleLocalService userGroupRoleLocalService;
	@BeanReference(type = com.liferay.portal.kernel.service.UserGroupRoleService.class)
	protected com.liferay.portal.kernel.service.UserGroupRoleService userGroupRoleService;
	@BeanReference(type = UserGroupRolePersistence.class)
	protected UserGroupRolePersistence userGroupRolePersistence;
	@BeanReference(type = UserGroupRoleFinder.class)
	protected UserGroupRoleFinder userGroupRoleFinder;
	@BeanReference(type = com.liferay.portal.kernel.service.UserIdMapperLocalService.class)
	protected com.liferay.portal.kernel.service.UserIdMapperLocalService userIdMapperLocalService;
	@BeanReference(type = UserIdMapperPersistence.class)
	protected UserIdMapperPersistence userIdMapperPersistence;
	@BeanReference(type = com.liferay.portal.kernel.service.WorkflowInstanceLinkLocalService.class)
	protected com.liferay.portal.kernel.service.WorkflowInstanceLinkLocalService workflowInstanceLinkLocalService;
	@BeanReference(type = WorkflowInstanceLinkPersistence.class)
	protected WorkflowInstanceLinkPersistence workflowInstanceLinkPersistence;
}